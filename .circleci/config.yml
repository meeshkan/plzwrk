version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build
      - asterius:
          requires:
            - build
      - deploy:
          requires:
            - asterius
          filters:
            branches:
              only: master
  
jobs:
  build:
    docker:
      - image: fpco/stack-build:lts
    steps:
      - checkout
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          name: Restore Cached Dependencies
          keys:
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "package.yaml" }}
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}
      - run:
          name: Resolve/Update Dependencies
          command: stack --no-terminal setup
      - run:
          name: Run tests
          command: stack --no-terminal test
      - run:
          name: Install executable
          command: stack --no-terminal install
      - save_cache:
          name: Cache Dependencies
          key: cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "package.yaml" }}
          paths:
            - "/root/.stack"
            - ".stack-work"
  asterius:
    docker:
      - image: terrorjack/asterius
    steps:
      - checkout
      - run:
          name: Installs plzwrk
          command: ahc-cabal v1-install -j1 --prefix=$ASTERIUS_LIB_DIR --package-db=clear --package-db=global --constraint "plzwrk +plzwrk-enable-asterius" .
      - run:
          name: Builds kitchen-sink
          command: cd kitchen-sink && ahc-link --input-hs Main.hs --browser --bundle
      - run:
          name: Builds hello-world
          command: cd hello-world && ahc-link --input-hs Main.hs --browser --bundle
      - store_artifacts:
          path: ./kitchen-sink
      - store_artifacts:
          path: ./hello-world        
  deploy:
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Push to dockerhub
          command: docker build -t meeshkan/plzwrk:latest ./ && docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && docker push meeshkan/plzwrk:latest