version: 2.1
executors:
  asterius:
    docker:
      - image: terrorjack/asterius
commands:
  asterius_build:
    description: "Used to build an asterius test"
    parameters:
      dirname:
        type: string
    steps:
      - checkout
      - run:
          name: Install surge
          command: npm install -g surge
      - run:
          name: Installs plzwrk
          command: ahc-cabal v1-install -j1 --prefix=$ASTERIUS_LIB_DIR --package-db=clear --package-db=global --constraint "plzwrk +plzwrk-enable-asterius" .
      - run:
          name: Builds << parameters.dirname >>
          command: cd << parameters.dirname >> && ahc-link --input-hs Main.hs --debug --browser --bundle
      - run:
          name: Uploads << parameters.dirname >> to surge
          command: cd << parameters.dirname >> && cp Main.html index.html && PWSITE=<< parameters.dirname >> surge . "plzwrk-${PWSITE}-${CIRCLE_SHA1}.surge.sh"    
workflows:
  build_and_deploy:
    jobs:
      - build
      - asterius-hello-world:
          requires:
            - build
      - asterius-hello-world-nested:
          requires:
            - build
      - asterius-hello-world-repeat:
          requires:
            - build
      - asterius-hello-world-state:
          requires:
            - build
      - asterius-hello-world-state-click:
          requires:
            - build
      - asterius-hello-world-with-listener:
          requires:
            - build
      - asterius-kitichen-sink:
          requires:
            - build
      - deploy:
          requires:
            - asterius-hello-world
            - asterius-hello-world-nested
            - asterius-hello-world-repeat
            - asterius-hello-world-state
            - asterius-hello-world-state-click
            - asterius-hello-world-with-listener
            - asterius-kitichen-sink
          filters:
            branches:
              only: master
  
jobs:
  build:
    docker:
      - image: fpco/stack-build:lts
    steps:
      - checkout
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          name: Restore Cached Dependencies
          keys:
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "package.yaml" }}
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}
      - run:
          name: Resolve/Update Dependencies
          command: stack --no-terminal setup
      - run:
          name: Run tests
          command: stack --no-terminal test
      - run:
          name: Install executable
          command: stack --no-terminal install
      - save_cache:
          name: Cache Dependencies
          key: cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "package.yaml" }}
          paths:
            - "/root/.stack"
            - ".stack-work"
  asterius-hello-world:
    executor: asterius
    steps:
      - asterius_build:
          dirname: hello-world
  asterius-hello-world-nested:
    executor: asterius
    steps:
      - asterius_build:
          dirname: hello-world-nested
  asterius-hello-world-repeat:
    executor: asterius
    steps:
      - asterius_build:
          dirname: hello-world-repeat
  asterius-hello-world-state:
    executor: asterius
    steps:
      - asterius_build:
          dirname: hello-world-state
  asterius-hello-world-state-click:
    executor: asterius
    steps:
      - asterius_build:
          dirname: hello-world-state-click
    asterius-hello-world-with-listener:
      executor: asterius
      steps:
        - asterius_build:
            dirname: hello-world-with-listener
    asterius-kitchen-sink:
      executor: asterius
      steps:
        - asterius_build:
            dirname: kitchen-sink
                                  
  deploy:
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Push to dockerhub
          command: docker build -t meeshkan/plzwrk:latest ./ && docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && docker push meeshkan/plzwrk:latest